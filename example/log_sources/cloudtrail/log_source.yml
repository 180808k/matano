name: "cloudtrail"

ingest:
  expand_records_from_payload: parse_json!(.__raw).Records

transform: | # TODO: ts handling... file, source... 
    .ts = to_timestamp!(.json.eventTime)
    .aws.cloudtrail.event_version = del(.json.eventVersion)
    .aws.cloudtrail.user_identity.type = del(.json.userIdentity.type)
    if .json.userIdentity.userName != null {
        .related.user = push(.related.user, .json.userIdentity.userName)
    }
    .user.name = del(.json.userIdentity.userName)
    .user.id = del(.json.userIdentity.principalId)
    .aws.cloudtrail.user_identity.arn = del(.json.userIdentity.arn)
    .cloud.account.id = del(.json.userIdentity.accountId)
    .aws.cloudtrail.user_identity.access_key_id = del(.json.userIdentity.accessKeyId)
    .aws.cloudtrail.user_identity.session_context.mfa_authenticated = del(.json.userIdentity.sessionContext.attributes.mfaAuthenticated)
  
      if .json.userIdentity.sessionContext.attributes.creationDate != null {
            .aws.cloudtrail.user_identity.session_context.creation_date = to_timestamp!(.json.userIdentity.sessionContext.attributes.creationDate)
      }
    .aws.cloudtrail.user_identity.session_context.session_issuer.type = del(.json.userIdentity.sessionContext.sessionIssuer.type)
    .user.name = del(.json.userIdentity.sessionContext.sessionIssuer.userName)
    .aws.cloudtrail.user_identity.session_context.session_issuer.principal_id = del(.json.userIdentity.sessionContext.sessionIssuer.principalId)
    .aws.cloudtrail.user_identity.session_context.session_issuer.arn = del(.json.userIdentity.sessionContext.sessionIssuer.arn)
    .aws.cloudtrail.user_identity.session_context.session_issuer.account_id = del(.json.userIdentity.sessionContext.sessionIssuer.accountId)
    .aws.cloudtrail.user_identity.invoked_by = del(.json.userIdentity.invokedBy)
    .event.provider = del(.json.eventSource)
    .event.action = .json.eventName
    .aws.cloudtrail.event_category = del(.json.eventCategory)
    .cloud.region = del(.json.awsRegion)
    .source.address = del(.json.sourceIPAddress)
  
    _grokked, err = parse_groks(.source.address, ["^%{IP:source.ip}$"])
    if err == null {
        . |= _grokked
    }
    .source.as.number = del(.source.as.asn)
    .source.as.organization.name = del(.source.as.organization_name)
    .user_agent = del(.json.userAgent)
    .aws.cloudtrail.error_code = del(.json.errorCode)
    .aws.cloudtrail.error_message = del(.json.errorMessage)
  
    if .json.requestParameters != null {
        .aws.cloudtrail.flattened.request_parameters = flatten!(del(.json.requestParameters))
    }
    if .json.responseParameters != null {
        .aws.cloudtrail.flattened.response_parameters = flatten!(del(.json.responseParameters))
    }
    if .json.additionalEventData != null {
        .aws.cloudtrail.flattened.additional_eventdata = flatten!(del(.json.additionalEventData))
    }
    if .json.serviceEventDetails != null {
        .aws.cloudtrail.flattened.service_event_details = flatten!(del(.json.serviceEventDetails))
    }
  
  
    .aws.cloudtrail.request_id = del(.json.requestId)
    .event.id = del(.json.eventID)
    .aws.cloudtrail.event_type = del(.json.eventType)
    .aws.cloudtrail.api_version = del(.json.apiVersion)
    .aws.cloudtrail.management_event = del(.json.managementEvent)
    .aws.cloudtrail.read_only = del(.json.readOnly)
    .aws.cloudtrail.resources.arn = del(.json.resources.ARN)
    .aws.cloudtrail.resources.account_id = del(.json.resources.accountId)
    .aws.cloudtrail.resources.type = del(.json.resources.type)
    .aws.cloudtrail.recipient_account_id = del(.json.recipientAccountId)
    .aws.cloudtrail.shared_event_id = del(.json.sharedEventId)
    .aws.cloudtrail.vpc_endpoint_id = del(.json.vpcEndpointId)
    if .aws.cloudtrail.flattened.request_parameters.userName != null {
        .related.user = push!(.related.user, .aws.cloudtrail.flattened.request_parameters.userName)
    }
    if .aws.cloudtrail.flattened.request_parameters.newUserName != null {
        .related.user = push(.related.user, .aws.cloudtrail.flattened.request_parameters.newUserName)
    }
  
    if (.event.action == "ConsoleLogin") {
      if .aws.cloudtrail.flattened.additional_eventdata.MobileVersion != null {
        .aws.cloudtrail.console_login.additional_eventdata.mobile_version = .aws.cloudtrail.flattened.additional_eventdata.MobileVersion != "No"
      }
      if .aws.cloudtrail.flattened.additional_eventdata.MFAUsed != null {
        .aws.cloudtrail.console_login.additional_eventdata.mfa_used = .aws.cloudtrail.flattened.additional_eventdata.MFAUsed != "No"
      }
      if .aws.cloudtrail.flattened.additional_eventdata.LoginTo != null {
        .aws.cloudtrail.console_login.additional_eventdata.login_to = .aws.cloudtrail.flattened.additional_eventdata.LoginTo
      }
    }
  
    .cloud.account.id = del(.json.awsAccountId)
    .file.path = del(.json.previousDigestS3Object)
    .file.hash.sha256 = del(.json.previousDigestSignature)
    if .file.hash.sha256 != null {
        .related.hash = push!(.related.hash, .file.hash.sha256)
    }
    .aws.cloudtrail.digest.log_files = del(.json.logFiles)
  
    if .json.digestStartTime != null {
        .aws.cloudtrail.digest.start_time = to_timestamp!(.json.digestStartTime)
    }
  
    if .json.digestEndTime != null {
        .ts = to_timestamp!(.json.digestEndTime)
        .aws.cloudtrail.digest.end_time = .ts
    }
  
    .aws.cloudtrail.digest.s3_bucket = del(.json.digestS3Bucket)
  
    if .json.newestEventTime != null {
        .aws.cloudtrail.digest.newest_event_time = to_timestamp!(.json.newestEventTime)
    }
    if .json.oldestEventTime != null {
        .aws.cloudtrail.digest.oldest_event_time = to_timestamp!(.json.oldestEventTime)
    }
    .aws.cloudtrail.digest.previous_s3_bucket = del(.json.previousDigestS3Bucket)
    .aws.cloudtrail.digest.previous_hash_algorithm = del(.json.previousDigestHashAlgorithm)
    .aws.cloudtrail.digest.public_key_fingerprint = del(.json.publicKeyFingerprint)
    .aws.cloudtrail.digest.signature_algorithm = del(.json.digestSignatureAlgorithm)
    .aws.cloudtrail.insight_details = del(.json.insightDetails)
    .group.id = .aws.cloudtrail.flattened.response_elements.group.groupId
    .user.target.id = .aws.cloudtrail.flattened.response_elements.user.userId
    .user.changes.name = .aws.cloudtrail.flattened.request_parameters.newUserName
    .group.name = .aws.cloudtrail.flattened.request_parameters.groupName
    .user.target.name = .aws.cloudtrail.flattened.request_parameters.userName
    .aws.cloudtrail.flattened.digest = del(.aws.cloudtrail.digest)
    .aws.cloudtrail.flattened.insight_details = del(.aws.cloudtrail.insight_details)
  
    del(.json)
    . |= .aws.cloudtrail
    del(.aws)
    . = compact(.)

schema:
  # ecs_field_names:
  #   - cloud
  #   - event
  #   - file
  #   - group
  #   - related
  #   - source
  #   - user
  #   - user_agent
  # fields:
  # - name: aws
  #   required: false
  #   type:
  #     type: struct
  #     fields:
  #     - name: cloudtrail
  #       required: false
  #       type:
  #         type: struct
  fields:
  - name: error_code
    id: 100020
    required: false
    type: string
  - name: error_message
    id: 100021
    required: false
    type: string
  - name: event_type
    id: 100022
    required: false
    type: string
  - name: event_version
    id: 100023
    required: false
    type: string
  - name: recipient_account_id
    id: 100024
    required: false
    type: string
  - name: user_identity
    id: 100025
    required: false
    type:
      type: struct
      fields:
      - name: access_key_id
        id: 100026
        required: false
        type: string
      - name: arn
        id: 100027
        required: false
        type: string
      - name: session_context
        id: 100028
        required: false
        type:
          type: struct
          fields:
          - name: creation_date
            id: 100029
            required: false
            type: timestamp
          - name: mfa_authenticated
            id: 100030
            required: false
            type: string
      - name: type
        id: 100031
        required: false
        type: string
  - name: flattened
    required: false
    id: 100032
    type:
      type: struct
      fields:
      - name: request_parameters
        required: false
        id: 100033
        type: 
          type: map
          key-id: 100034
          key: string
          value-id: 100035
          value-required: false
          value: string
      - name: response_parameters
        required: false
        id: 100036
        type: 
          type: map
          key-id: 100037
          key: string
          value-id: 100038
          value-required: false
          value: string
      - name: additional_eventdata
        required: false
        id: 100039
        type: 
          type: map
          key-id: 100040
          key: string
          value-id: 100041
          value-required: false
          value: string
      - name: service_event_details
        required: false
        id: 100042
        type: 
          type: map
          key-id: 100043
          key: string
          value-id: 100044
          value-required: false
          value: string

  # - id: 10001
  #   name: cloud
  #   required: false
  #   type:
  #     type: struct
  #     fields:
  #     - id: 100022
  #       name: account
  #       required: false
  #       type:
  #         type: struct
  #         fields:
  #         - id: 100021
  #           name: id
  #           required: false
  #           type: string
  #     - id: 100023
  #       name: region
  #       required: false
  #       type: string
  # - id: 10002
  #   name: event
  #   required: false
  #   type:
  #     type: struct
  #     fields:
  #     - id: 100024
  #       name: action
  #       required: false
  #       type: string
  #     - id: 100025
  #       name: id
  #       required: false
  #       type: string
  #     - id: 100026
  #       name: provider
  #       required: false
  #       type: string
  # - id: 10003
  #   name: related
  #   required: false
  #   type:
  #     type: struct
  #     fields:
  #     - id: 100028
  #       name: user
  #       required: false
  #       type:
  #         type: list
  #         element-id: 100027
  #         element: string
  #         element-required: false
  # - id: 10004
  #   name: source
  #   required: false
  #   type:
  #     type: struct
  #     fields:
  #     - id: 100029
  #       name: ip
  #       required: false
  #       type: string
  # - id: 10005
  #   name: ts
  #   required: false
  #   type: long
  # - id: 10006
  #   name: user
  #   required: false
  #   type:
  #     type: struct
  #     fields:
  #     - id: 100030
  #       name: id
  #       required: false
  #       type: string
  # - id: 10007
  #   name: user_agent
  #   required: false
  #   type: string
